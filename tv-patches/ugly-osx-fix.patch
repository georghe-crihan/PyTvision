Below is an ugly fix to make it compile on OS X: somehow these symbols are not
found by the dynamic loader.
--- tvision/include/tv.h	2010-07-14 16:59:04.000000000 +0400
+++ tvision-py/include/tv.h	2018-02-18 17:42:05.000000000 +0300
@@ -820,3 +820,13 @@
 #ifdef INCL_CONFIGFILE_H
 #include <tv/configfile.h>
 #endif
+
+#ifndef SWIG
+#include "compat/iswild.c"
+#include "compat/releasec.c"
+#include "compat/ticks.c"
+#include "compat/snprintf.c"
+#include "compat/filelength.c"
+#include "compat/fixpath.c"
+#include "compat/getline.c"
+#endif
diff -ur tvision/compat/fexpand.c tvision-py/compat/fexpand.c
--- tvision/compat/fexpand.c	2001-09-20 05:14:18.000000000 +0400
+++ tvision-py/compat/fexpand.c	2018-02-16 19:09:51.000000000 +0300
@@ -6,10 +6,11 @@
 */
 
 #include <cl/needs.h>
+#include "compat/fixpath.c"
 
 #if defined(TVCompf_djgpp) || defined(TVComp_BCPP) || defined(TVOS_UNIX) || \
     defined(TVCompf_Cygwin)
-#define Uses_fixpath
+//#define Uses_fixpath
 #define Uses_string
 #define Uses_limits
 #include <compatlayer.h>
diff -ur tvision/compat/filelength.c tvision-py/compat/filelength.c
--- tvision/compat/filelength.c	2000-05-12 06:29:29.000000000 +0400
+++ tvision-py/compat/filelength.c	2018-02-16 19:09:51.000000000 +0300
@@ -1,3 +1,5 @@
+#ifndef FILELENGTH_INCLUDED
+#define FILELENGTH_INCLUDED
 /*
  Copyright (C) 1996-1998 Robert H”hne
  Copyright (C) 2000      Salvador E. Tropea
@@ -8,7 +10,7 @@
 #ifdef NEEDS_FILELENGTH
 #include <unistd.h>
 
-long CLY_filelength(int fhandle)
+inline long CLY_filelength(int fhandle)
 {
  long oldval;
  long retval;
@@ -21,3 +23,4 @@
  return retval;
 }
 #endif
+#endif
diff -ur tvision/compat/fixpath.c tvision-py/compat/fixpath.c
--- tvision/compat/fixpath.c	2005-06-01 18:20:14.000000000 +0400
+++ tvision-py/compat/fixpath.c	2018-02-16 19:09:51.000000000 +0300
@@ -1,3 +1,5 @@
+#ifndef FIXPATH_INCLUDED
+#define FIXPATH_INCLUDED
 /**[txh]********************************************************************
 
   Description:
@@ -68,7 +70,7 @@
    6. Adding a drive specification if one wasn't there
    7. Converting all slashes to '/'
  */
-void
+inline void
 _fixpath(const char *in, char *out)
 {
   int           drive_number = 0;
@@ -209,7 +211,7 @@
    4. Removing "." in the path
    5. Removing ".." entries in the path (and the directory above them)
  */
-void _fixpath(const char *in, char *out)
+inline void _fixpath(const char *in, char *out)
 {
   const char    *ip = in;
   char          *op = out;
@@ -291,4 +293,4 @@
   End of modified code from DJGPP's libc 'fixpath.c'
 */
 #endif /* DJGPP, Linux and CygWin */
-
+#endif
diff -ur tvision/compat/getline.c tvision-py/compat/getline.c
--- tvision/compat/getline.c	2005-06-01 18:26:28.000000000 +0400
+++ tvision-py/compat/getline.c	2018-02-16 19:09:51.000000000 +0300
@@ -1,3 +1,5 @@
+#ifndef GETLINE_INCLUDED
+#define GETLINE_INCLUDED
 /**[txh]********************************************************************
 
   Description:
@@ -69,7 +71,7 @@
    should check feof(), if not then errno has been set to indicate the
    error.  */
 
-ssize_t CLY_getstr(char **lineptr, size_t *n, FILE *stream, char terminator,
+inline ssize_t CLY_getstr(char **lineptr, size_t *n, FILE *stream, char terminator,
                    int offset, int limit)
 {
  int nchars_avail;             /* Allocated but unused chars in *LINEPTR.  */
@@ -176,14 +178,14 @@
  return ret;
 }
 
-ssize_t CLY_getline(char **lineptr, size_t *n, FILE *stream)
+inline ssize_t CLY_getline(char **lineptr, size_t *n, FILE *stream)
 {
  return CLY_getstr(lineptr,n,stream,'\n',0,GETLINE_NO_LIMIT);
 }
 
-ssize_t CLY_getline_safe(char **lineptr, size_t *n, FILE *stream, int limit)
+inline ssize_t CLY_getline_safe(char **lineptr, size_t *n, FILE *stream, int limit)
 {
  return CLY_getstr(lineptr,n,stream,'\n',0,limit);
 }
 #endif // NEEDS_GETLINE
-
+#endif
diff -ur tvision/compat/getopt.c tvision-py/compat/getopt.c
--- tvision/compat/getopt.c	2005-06-21 23:30:17.000000000 +0400
+++ tvision-py/compat/getopt.c	2018-02-16 19:09:51.000000000 +0300
@@ -24,6 +24,8 @@
 
 
 #include <cl/needs.h>
+#include <string.h>
+#include <stdlib.h>
 
 #ifdef NEEDS_GETOPT
 
@@ -218,12 +220,10 @@
 /* Avoid depending on library functions or files
    whose names are inconsistent.  */
 
-char *getenv ();
+char *getenv (const char *);
 
 static char *
-my_index (str, chr)
-     const char *str;
-     int chr;
+my_index (const char *str, int chr)
 {
   while (*str)
     {
@@ -235,10 +235,7 @@
 }
 
 static void
-my_bcopy (from, to, size)
-     const char *from;
-     char *to;
-     int size;
+my_bcopy (const char *from, char *to, int size)
 {
   int i;
   for (i = 0; i < size; i++)
diff -ur tvision/compat/iswild.c tvision-py/compat/iswild.c
--- tvision/compat/iswild.c	2000-05-12 06:29:31.000000000 +0400
+++ tvision-py/compat/iswild.c	2018-02-16 19:09:51.000000000 +0300
@@ -1,3 +1,5 @@
+#ifndef ISWILD_INCLUDED
+#define ISWILD_INCLUDED
 /*
  Copyright (C) 1996-1998 Robert H”hne
  Copyright (C) 2000      Salvador E. Tropea
@@ -6,7 +8,8 @@
 
 #include <string.h>
 
-int CLY_IsWild(const char *f)
+inline int CLY_IsWild(const char *f)
 {
  return strpbrk(f,"?*")!=0;
 }
+#endif
diff -ur tvision/compat/releasec.c tvision-py/compat/releasec.c
--- tvision/compat/releasec.c	2003-11-03 23:32:33.000000000 +0300
+++ tvision-py/compat/releasec.c	2018-02-16 19:09:51.000000000 +0300
@@ -1,3 +1,5 @@
+#ifndef RELEASEC
+#define RELEASEC
 /* Copyright (C) 1996-1998 Robert H”hne */
 /* Modified by Salvador E. Tropea, Vadim Bolodorov and Anatoli Soltan */
 #include <tv/configtv.h>
@@ -5,7 +7,7 @@
 #ifdef TVCompf_djgpp
 #include <dpmi.h>
 
-void CLY_ReleaseCPU()
+inline void CLY_ReleaseCPU()
 {
  __dpmi_yield(); // Release the time slice
 }
@@ -22,7 +24,7 @@
 // some message.
 extern void __tvWin32Yield(int micros);
 
-void CLY_ReleaseCPU()
+inline void CLY_ReleaseCPU()
 {
  __tvWin32Yield(-1);
 }
@@ -30,7 +32,7 @@
 // By Vadim Beloborodov to be used on WIN32 console
 // SET: Vadim's port just waits 0.1 seconds. I think that's because he uses
 // another thread for input.
-void CLY_ReleaseCPU()
+inline void CLY_ReleaseCPU()
 {
  Sleep(100);
 }
@@ -61,8 +63,9 @@
 #ifdef TVOS_UNIX
 #include <unistd.h>
 
-void CLY_ReleaseCPU()
+inline void CLY_ReleaseCPU()
 {
  usleep(1000);   // Linux, release 1 ms
 }
 #endif
+#endif
diff -ur tvision/compat/snprintf.c tvision-py/compat/snprintf.c
--- tvision/compat/snprintf.c	2007-04-30 20:16:22.000000000 +0400
+++ tvision-py/compat/snprintf.c	2018-02-16 19:09:51.000000000 +0300
@@ -1,3 +1,5 @@
+#ifndef SNPRINTF_INCLUDED
+#define SNPRINTF_INCLUDED
 /*
    Unix snprintf implementation.
    Version 1.1
@@ -568,7 +570,7 @@
   }
 }
 
-PUBLIC int
+inline int
 CLY_vsnprintf(char *string, size_t length, const char * format, va_list args)
 {
   struct DATA data;
@@ -710,7 +712,7 @@
 
 #ifndef HAVE_SNPRINTF
 
-PUBLIC int
+inline int
 CLY_snprintf(char *string, size_t length, const char * format, ...)
 {
   int rval;
@@ -889,4 +891,4 @@
 #endif
 
 #endif /* NEEDS_SNPRINTF */
-
+#endif
diff -ur tvision/compat/ticks.c tvision-py/compat/ticks.c
--- tvision/compat/ticks.c	2001-09-20 05:14:20.000000000 +0400
+++ tvision-py/compat/ticks.c	2018-02-16 19:09:51.000000000 +0300
@@ -1,3 +1,5 @@
+#ifndef TICKS_INCLUDED
+#define TICKS_INCLUDED
 /* Copyright (C) 1996-1998 Robert H”hne */
 /* Modified by Salvador E. Tropea, Vadim Bolodorov and Anatoli Soltan */
 #include <tv/configtv.h>
@@ -6,7 +8,7 @@
 #include <sys/farptr.h>
 #include <go32.h>
 
-unsigned short CLY_Ticks(void)
+inline unsigned short CLY_Ticks(void)
 {
   return _farpeekw(_dos_ds,0x46c);
 }
@@ -18,7 +20,7 @@
 #define WIN32_LEAN_AND_MEAN
 #include <windows.h> //for GetTickCount
 
-unsigned short CLY_Ticks(void)
+inline unsigned short CLY_Ticks(void)
 {
   //  X ms * 1s/1000ms * 18.2 ticks/s = X/55 ticks, roughly.
   return GetTickCount() / 55;
@@ -31,7 +33,7 @@
 #include <sys/time.h>
 #include <stdio.h> /* for NULL */
 
-unsigned short CLY_Ticks(void)
+inline unsigned short CLY_Ticks(void)
 {
   struct timeval val;
   gettimeofday(&val,(struct timezone *)NULL);
@@ -39,4 +41,4 @@
 //  return clock();
 }
 #endif
-
+#endif
